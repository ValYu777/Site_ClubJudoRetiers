security:
    # üîê Gestion des hash de mots de passe
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'

    # üë§ Provider utilisateur (via l'entit√© User)
    providers:
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email

    # üî• Firewalls de s√©curit√©
    firewalls:
        # Partie dev (pas s√©curis√©e)
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        # Authentification principale
        main:
            lazy: true
            provider: app_user_provider
            custom_authenticator: App\Security\LoginAuthenticator

            logout:
                path: app_logout
                target: /  # redirige vers la page d'accueil apr√®s d√©connexion

            remember_me:
                secret: '%kernel.secret%'
                lifetime: 604800 # 1 semaine
                path: /
                # always_remember_me: true

    # üöß Contr√¥le d'acc√®s aux routes
    access_control:
        - { path: ^/login,         roles: PUBLIC_ACCESS }
        - { path: ^/admin/galerie, roles: ROLE_ADMIN }
        - { path: ^/admin/album,   roles: ROLE_ADMIN }
        - { path: ^/admin/photo,   roles: ROLE_ADMIN }
        - { path: ^/admin/evenement, roles: ROLE_ADMIN }
        - { path: ^/evenement,     roles: ROLE_ADMIN }
        - { path: ^/,              roles: PUBLIC_ACCESS }

# üî¨ Configuration sp√©cifique pour les tests
when@test:
    security:
        password_hashers:
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4
                time_cost: 3
                memory_cost: 10
